services:
  app:
    build:
      context: ./drill-and-pratice
      dockerfile: Dockerfile
    image: app
    restart: "no"
    volumes:
      - ./drill-and-pratice:/app
      - ./app-cache:/app-cache
    ports:
      - 7777:7777
    depends_on:
      - postgres
      - flyway
    env_file:
      - .env
    environment:
      - PORT=7777
      - BASE_URL=http://localhost:7777

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${PG_DEV_USER}
      POSTGRES_PASSWORD: ${PG_DEV_PASSWORD}
      POSTGRES_DB: ${PG_DEV_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 5432:5432

  flyway:
    image: flyway/flyway:7.3.0-alpine
    depends_on:
      - postgres
    volumes:
      - ./flyway/conf:/flyway/conf
      - ./flyway/sql:/flyway/sql
    command: >
      -configFiles=/flyway/conf/flyway-${FLYWAY_ENV}.conf
      -connectRetries=60
      -baselineOnMigrate=true
      migrate
    env_file:
      - .env

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  # flyway_repair:
  #   image: flyway/flyway:7.3.0-alpine
  #   environment:
  #     - FLYWAY_USER=${FLYWAY_USER}
  #     - FLYWAY_PASSWORD=${FLYWAY_PASSWORD}
  #     - FLYWAY_URL=jdbc:postgresql://postgres:5432/${PG_PROD_DB}
  #   depends_on:
  #     - postgres
  #   volumes:
  #     - ./flyway/sql:/flyway/sql
  #   command: repair
  #   env_file:
  #     - .env

volumes:
  pgdata:
