name: Integration Tests with Flyway

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  integration-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        options: >-
          --health-cmd "pg_isready -U testuser"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            if pg_isready -h localhost -p 5432 -U testuser; then
              echo "PostgreSQL is ready!";
              break;
            fi;
            echo "Waiting for PostgreSQL...";
            sleep 3;
          done

      - name: Run Flyway migrations
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/flyway/sql:/flyway/sql \
            --network host \
            flyway/flyway:latest \
            -url=jdbc:postgresql://localhost:5432/testdb \
            -user=testuser \
            -password=testpassword \
            migrate

      - name: Insert test data
        run: |
          PGPASSWORD=testpassword psql -h localhost -U testuser -d testdb << EOF
          INSERT INTO users (id, username, email, admin) VALUES (6, 'Admin', 'admin@admin.admin', true);
          INSERT INTO topics (id, user_id, name) VALUES (800, 6, 'Test Topic with 1 question');
          INSERT INTO topics (id, user_id, name) VALUES (801, 6, 'Tpoic test no question');
          INSERT INTO topics (id, user_id, name) VALUES (802, 6, 'Topic with question and 1 option');
          INSERT INTO topics (id, user_id, name) VALUES (1, 6, 'Topic test');
          INSERT INTO questions (id, user_id, topic_id, question_text) VALUES (1, 6, 1, 'Test Question');
          INSERT INTO questions (id, user_id, topic_id, question_text) VALUES (800, 6, 1, 'Test question without options');
          INSERT INTO questions (id, user_id, topic_id, question_text) VALUES (801, 6, 800, 'Test question without options');
          INSERT INTO questions (id, user_id, topic_id, question_text) VALUES (802, 6, 802, 'Question with one option');
          INSERT INTO question_answer_options (id, question_id, option_text, is_correct) VALUES (804, 802, 'Option 1', false);
          INSERT INTO question_answer_options (id, question_id, option_text, is_correct) VALUES (803, 801, 'Option 1', false);
          INSERT INTO question_answer_options (id, question_id, option_text, is_correct) VALUES (802, 801, 'Option 2', true);
          INSERT INTO question_answer_options (id, question_id, option_text, is_correct) VALUES (801, 1, 'Option 1', false);
          INSERT INTO question_answer_options (id, question_id, option_text, is_correct) VALUES (800, 1, 'Option 2', true);
          EOF

      - name: Run integration tests
        env:
          DATABASE_URL: postgres://testuser:testpassword@localhost:5432/testdb
          MODE: LOCAL
        run: deno test --allow-net --allow-env --allow-read
